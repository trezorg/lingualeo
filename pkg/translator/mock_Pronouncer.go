// Code generated by mockery v2.43.0. DO NOT EDIT.

package translator

import mock "github.com/stretchr/testify/mock"

// Mock_Pronouncer is an autogenerated mock type for the Pronouncer type
type Mock_Pronouncer struct {
	mock.Mock
}

type Mock_Pronouncer_Expecter struct {
	mock *mock.Mock
}

func (_m *Mock_Pronouncer) EXPECT() *Mock_Pronouncer_Expecter {
	return &Mock_Pronouncer_Expecter{mock: &_m.Mock}
}

// Play provides a mock function with given fields: url
func (_m *Mock_Pronouncer) Play(url string) error {
	ret := _m.Called(url)

	if len(ret) == 0 {
		panic("no return value specified for Play")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(url)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Mock_Pronouncer_Play_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Play'
type Mock_Pronouncer_Play_Call struct {
	*mock.Call
}

// Play is a helper method to define mock.On call
//   - url string
func (_e *Mock_Pronouncer_Expecter) Play(url interface{}) *Mock_Pronouncer_Play_Call {
	return &Mock_Pronouncer_Play_Call{Call: _e.mock.On("Play", url)}
}

func (_c *Mock_Pronouncer_Play_Call) Run(run func(url string)) *Mock_Pronouncer_Play_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *Mock_Pronouncer_Play_Call) Return(_a0 error) *Mock_Pronouncer_Play_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Mock_Pronouncer_Play_Call) RunAndReturn(run func(string) error) *Mock_Pronouncer_Play_Call {
	_c.Call.Return(run)
	return _c
}

// NewMock_Pronouncer creates a new instance of Mock_Pronouncer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMock_Pronouncer(t interface {
	mock.TestingT
	Cleanup(func())
}) *Mock_Pronouncer {
	mock := &Mock_Pronouncer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
